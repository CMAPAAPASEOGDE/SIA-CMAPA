<?php
session_start();

// Error reporting for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('log_errors', 1);

if (!isset($_SESSION['user_id'])) { 
    header("Location: ../index.php"); 
    exit(); 
}

require_once __DIR__ . '/log_utils.php';
$conn = db_conn_or_die(); logs_boot($conn);
log_event($conn, (int)$_SESSION['user_id'], 'REP_WHMS_PDF',
          'WHMS PDF mes='.$mes.' anio='.$anio.' idCodigo='.($idCodigo ?? 'Todos'),
          'REPORTES', 1);

require_once __DIR__ . '/kardex_core.php';

// Try multiple autoload paths
$autoloadPaths = [
    dirname(__DIR__) . '/vendor/autoload.php',  // parent directory
    __DIR__ . '/../vendor/autoload.php',        // same as above
    __DIR__ . '/vendor/autoload.php',           // current directory
    'vendor/autoload.php'                       // relative path
];

$autoload = null;
foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        $autoload = $path;
        error_log("Found autoload at: " . $path);
        break;
    }
}

if (!$autoload) {
    error_log("Autoload not found. Checked paths: " . implode(', ', $autoloadPaths));
    die('Error: Composer autoload not found. Please run: composer install');
}

require_once $autoload;

use Dompdf\Dompdf;
use Dompdf\Options;

try {
    $conn     = db_conn();
    $idCodigo = $_POST['idCodigo'] ?? 'ALL';
    $desde    = $_POST['desde']    ?? '';
    $hasta    = $_POST['hasta']    ?? '';
    
    if (!$desde || !$hasta) {
        die("Error: Faltan fechas requeridas.");
    }
    
    error_log("Generating Kardex PDF for: $idCodigo, $desde to $hasta");
    
    $productos = traerProductos($conn, $idCodigo);
    
    if (empty($productos)) {
        die("Error: No se encontraron productos.");
    }

    // Clear any existing output
    while (ob_get_level()) {
        ob_end_clean();
    }

    $html = '<html><head><meta charset="UTF-8"></head><body>';
    $html .= '<h1 style="font-family:DejaVu Sans,Arial">KARDEX DE PRODUCTOS</h1>';
    $html .= '<div>Periodo: '.htmlspecialchars($desde).' a '.htmlspecialchars($hasta).'</div>';

    $granTotal = 0.0;
    foreach ($productos as $p) {
        [$rows, $tot] = procesarKardexPorProducto($conn, $p['idCodigo'], $desde, $hasta);
        $html .= '<div style="page-break-inside:avoid; margin-top:14px;">';
        $html .= render_kardex_html($conn, $p, $desde, $hasta, $rows, $tot);
        $html .= '</div>';
        $granTotal += floatval($tot['kardex_total']);
    }

    $html .= '<h3 style="text-align:right;font-family:DejaVu Sans,Arial">Total global del reporte: '.number_format($granTotal,2).'</h3>';
    $html .= '</body></html>';

    $options = new Options();
    $options->set('isRemoteEnabled', true);
    $options->set('defaultFont', 'DejaVu Sans');
    
    $dompdf = new Dompdf($options);
    $dompdf->loadHtml($html, 'UTF-8');
    $dompdf->setPaper('A4', 'portrait');
    $dompdf->render();

    // Optional: Add notification logging (instead of missing function)
    error_log("Kardex PDF generated by user: " . ($_SESSION['usuario'] ?? 'unknown'));

    $filename = "kardex_{$idCodigo}_{$desde}_{$hasta}.pdf";
    $dompdf->stream($filename, ["Attachment" => true]);

    sqlsrv_close($conn);
    exit();

} catch (Exception $e) {
    error_log("Kardex PDF Error: " . $e->getMessage() . " - " . $e->getTraceAsString());
    
    // Clear any output
    while (ob_get_level()) {
        ob_end_clean();
    }
    
    http_response_code(500);
    header('Content-Type: text/plain');
    echo "Error generando PDF del Kardex: " . $e->getMessage();
    exit();
}
?>